{"version":3,"sources":["logo.svg","countClass.js","pricingTable.js","Stars.js","App.js","reportWebVitals.js","index.js"],"names":["Component","Pricing","class","title","price","available","notAvailable","map","ele","avail","notAvail","href","React","App","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","name","document","getElementById"],"mappings":"oPAAe,I,4CCEOA,Y,MCwDPC,MAxDf,WAqBI,OACI,mCACA,yBAASC,MAAM,eAAf,SACI,qBAAKA,MAAM,YAAX,SACI,qBAAKA,MAAM,MAAX,SAvBD,CAAC,CACRC,MAAO,OACPC,MAAO,KACPC,UAAU,CAAC,cAAe,cAAc,4BAA4B,oBACpEC,aAAa,CAAC,6BAA8B,0BAA2B,iBAAkB,2BAE7F,CACIH,MAAO,OACPC,MAAO,KACPC,UAAU,CAAC,UAAW,eAAgB,4BAA6B,mBAAoB,6BAA8B,0BAA2B,kBAChJC,aAAa,CAAC,2BAElB,CACIH,MAAO,MACPC,MAAO,MACPC,UAAU,CAAC,kBAAmB,gBAAiB,4BAA6B,mBAAoB,6BAA8B,0BAA2B,2BAA2B,0BACpLC,aAAa,KAQCC,KAAI,SAACC,GACP,OACA,qBAAKN,MAAM,WAAX,SACI,qBAAKA,MAAM,oBAAX,SACA,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,mDAAV,SAA8DM,EAAIL,QAClE,qBAAID,MAAM,yBAAV,UAAoCM,EAAIJ,MAAM,sBAAMF,MAAM,SAAZ,uBAC9C,qBAAIA,MAAM,QAAV,UACKM,EAAIH,UAAUE,KAAI,SAACE,GAChB,OAAO,+BAAI,sBAAMP,MAAM,QAAZ,SAAoB,mBAAGA,MAAM,mBAA2BO,QAEtED,EAAIF,aAAaC,KAAI,SAACG,GACnB,OAAO,qBAAIR,MAAM,aAAV,UAAuB,sBAAMA,MAAM,QAAZ,SAAoB,mBAAGA,MAAM,mBAA2BQ,WAG9F,qBAAKR,MAAM,SAAX,SACA,mBAAGS,KAAK,IAAIT,MAAM,iCAAlB,yC,sBC3CHU,IAAMZ,U,0BC+FhBa,MAxEf,SAAaC,GACX,OAQE,aAPA,CAOA,qBACA,cAAC,EAAD,OCtBWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,EAAD,CAAKC,KAAK,SACZC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2cfba901.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{Component} from \"react\";\r\n\r\nclass Counter extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n    }\r\n    increment = () =>{\r\n        this.setState({count:this.state.count + 1})\r\n    }\r\n    decrement = () =>{\r\n        this.setState({count:this.state.count - 1})\r\n    }\r\n    reset = () =>{\r\n        this.setState({count:0})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <p>value - {this.state.count}</p>\r\n            <button onClick = {this.increment}>Increment</button>\r\n            <button onClick = {this.decrement}>decrement</button>\r\n            <button onClick = {this.reset}>reset</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter;","import React from \"react\";\r\n\r\nfunction Pricing(){\r\n\r\n    let data = [{\r\n        title: \"FREE\",\r\n        price: \"$0\",\r\n        available:[\"Single User\", \"5GB Storage\",\"Unlimited Public Projects\",\"Community Access\"],\r\n        notAvailable:[\"Unlimited Private Projects\", \"Dedicated Phone Support\", \"Free Subdomain\", \"Monthly Status Reports\"]\r\n    },\r\n    {\r\n        title: \"PLUS\",\r\n        price: \"$9\",\r\n        available:[\"5 Users\", \"50GB Storage\", \"Unlimited Public Projects\", \"Community Access\", \"Unlimited Private Projects\", \"Dedicated Phone Support\", \"Free Subdomain\"],\r\n        notAvailable:[\"Monthly Status Reports\"]\r\n    },\r\n    {\r\n        title: \"PRO\",\r\n        price: \"$49\",\r\n        available:[\"Unlimited Users\", \"150GB Storage\", \"Unlimited Public Projects\", \"Community Access\", \"Unlimited Private Projects\", \"Dedicated Phone Support\", \"Unlimited Free Subdomain\",\"Monthly Status Reports\"],\r\n        notAvailable:[]\r\n    }];\r\n\r\n    return(\r\n        <>\r\n        <section class=\"pricing py-5\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                {data.map((ele)=>{\r\n                    return (                \r\n                    <div class=\"col-lg-4\">\r\n                        <div class=\"card mb-5 mb-lg-0\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title text-muted text-uppercase text-center\">{ele.title}</h5>\r\n                            <h6 class=\"card-price text-center\">{ele.price}<span class=\"period\">/month</span></h6>\r\n                            <ul class=\"fa-ul\">\r\n                                {ele.available.map((avail)=>{\r\n                                    return <li><span class=\"fa-li\"><i class=\"fas fa-check\"></i></span>{avail}</li>\r\n                                })}\r\n                                {ele.notAvailable.map((notAvail)=>{\r\n                                    return <li class=\"text-muted\"><span class=\"fa-li\"><i class=\"fas fa-times\"></i></span>{notAvail}</li>\r\n                            })}\r\n                            </ul>\r\n                            <div class=\"d-grid\">\r\n                            <a href=\"#\" class=\"btn btn-primary text-uppercase\">Button</a>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                )})}\r\n                </div>\r\n            </div>\r\n            </section>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Pricing;","import React from \"react\";\r\nclass StarRating extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            stars : [1,2,3,4,5],\r\n            rating : 0,\r\n            selectedIcon : \"★\",\r\n            deSelectedIcon : \"☆\",\r\n            \r\n\r\n        }\r\n        \r\n    }\r\n\r\n    changeRating(newRating){\r\n        this.setState({rating:newRating});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{cursor:\"pointer\",fontSize:\"1.5em\",color: \"#38d39f\"}}>\r\n            {this.state.stars.map((star)=>{\r\n                return(\r\n            <span onClick={() => this.changeRating(star)}>\r\n                \r\n                {\r\n                    this.state.rating < star ?\r\n                        this.state.deSelectedIcon : this.state.selectedIcon\r\n                }\r\n            </span>\r\n                )\r\n        })}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StarRating;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Counter from \"./countClass\";\n// import CounterFunc from \"./countFunc\";\nimport \"./PricingStyle.css\";\nimport Pricing from \"./pricingTable\";\n// import './CartStyle.css';\nimport Shop from \"./ShopApp\";\nimport Post from \"./PostApp\";\nimport CounterFunc from './countFunc';\n// import withBorders from './withBorders';\n\nimport React,{useEffect, useRef, useState} from 'react';\n\nimport Test1 from \"./Test1\";\n\nimport { CounterContext } from './Context';\n\n\nimport {BrowserRouter, Route, Link,NavLink} from \"react-router-dom\";\n// import Cart from \"./CartItems\";\nimport StarRating from \"./Stars\";\nimport Crud from './CrudPost'\n\nfunction App(props) {\n  return(\n    // <>\n    // <BrowserRouter>\n    //    <Route exact path=\"/\" component={Shop}/>\n    //    {/* <Route path=\"/cart\" component={Cart}/> */}\n    //    <Route path=\"/star\" component={StarRating}/>                          \n    // </BrowserRouter>\n    // </>\n    <>\n    <Pricing/>\n    {/* <Crud/> */}\n    </>\n    \n  )\n\n  // const [count,setCount] = useState(36);\n  // const inpRef = useRef();\n  // console.log(inpRef)\n\n  // const increment = () =>{\n  //   inpRef.current.increment();\n  // }\n  // const decrement = () =>{\n  //   inpRef.current.decrement();\n  // }\n  // const reset = () =>{\n  //   inpRef.current.reset();\n  // }\n\n  // const increment = () =>{\n  //   setCount(count+1)\n  // }\n  // const decrement = () =>{\n  //   setCount(count-1)\n  // }\n  // const reset = () =>{\n  //   setCount(0)\n  // }\n  // useEffect (() =>{\n  //   inpRef.current.increment = () => {\n  //     inpRef.current.setState({count:inpRef.current.state.count + 5})\n  //   }\n  // },[])\n\n\n  // return (\n    // <>\n    {/* // <CounterContext.Provider value={{count:count,increment,decrement,reset}}> */}\n      \n    {/* <Counter/> */}\n    {/* <CounterFunc/> */}\n    {/* <Pricing/> */}\n    \n    {/* <Post/> */}\n    {/* <Counter ref={inpRef}/> */}\n    {/* <Counter/> */}\n    {/* <p>Count - {count}</p>\n    <button onClick = {increment}>Increment from app</button>\n    <button onClick = {decrement}>decrement from app</button>\n    <button onClick = {reset}>reset from app</button> */}\n    \n    \n    {/* <Test1/> */}\n    {/* <Cart/> */}\n    {/* // </CounterContext.Provider> */}\n    // </>\n  // );\n  \n}\n\n// export default withBorders(App);\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <App name=\"Guvi\" />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}